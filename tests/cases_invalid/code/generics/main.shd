struct Data {
    field: i32,
}

struct UndefinedGenericConstType<N: Undefined> {
    field: i32,
}

struct InvalidGenericConstType<N: Data> {
    field: i32,
}

struct DuplicatedGenericParams<T, U, T: u32, U: u32> {
    field: i32,
}

fn undefined_generic_const_type<N: Undefined>() {
}

fn invalid_generic_const_type<N: Data>() {
}

fn duplicated_function<T, U>(param: i32) {
}

fn duplicated_function<T, U, V>(param: u32) {
}

fn duplicated_generic_params<T, U, T: u32, U: u32>() {
}

fn generic_function<T, U: u32>(param: u32) {
}

const INVALID = undefined;

run {
    undefined_generic_const_type<2>();
    generic_function<u32, 1u>(INVALID);
    generic_function<u32, 1u>(true); // function param with invalid type
    generic_function<u32>(0u); // invalid number of generic params
    generic_function<1u, 1u>(0u); // invalid generic type
    generic_function<u32, u32>(0u); // invalid generic constant
    generic_function<u32, 1>(0u); // invalid generic constant type
    generic_function<u32, INVALID>(0u);
    generic_function<undefined, undefined>(0u);
}
