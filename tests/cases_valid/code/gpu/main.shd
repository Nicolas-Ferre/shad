buf data = Data(vec4i(3, 4, 5, 6), i32x2(1, 2), i32x2x2(i32x2(7, 8), i32x2(9, 10)));

run {
    data.v4.y = 42;
}

gpu fn vec4i(x: i32, y: i32, z: i32, w: i32) -> vec4i;
gpu(vec2i) fn i32x2(x: i32, y: i32) -> i32x2;
gpu(array<i32x2, 2>) fn i32x2x2(first: i32x2, second: i32x2) -> i32x2x2;

struct Data {
    v4: vec4i,
    v2: i32x2,
    v22: i32x2x2,
}

gpu layout(16, 16) struct vec4i {
    y: i32,
}

gpu(vec2i) layout(8, 8) struct i32x2 {
    x: i32,
    y: i32,
}

gpu(array<i32x2, 2>) struct i32x2x2 {
}

gpu(array<i32x2, 2,>) struct i32x2x2_with_generic_leading_comma {
    first: i32x2,
    second: i32x2,
}

buf result_add_operator = 0;
buf result_add_same_name = 0;
buf result_add_renamed = 0;

run {
    result_add_operator = 2 + 4;
    result_add_same_name = __add__(2, 4);
    result_add_renamed = gpu_add(2, 4);
}

gpu fn __add__(left: i32, right: i32) -> i32;
gpu(__add__) fn gpu_add(left: i32, right: i32) -> i32;
